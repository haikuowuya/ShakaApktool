-1=繁中源於Google譯文,Rover12421二次處理
0=使用AspectJ織入修改Apktool項目
1=修改自
2=Android APK 反彙編工具
3=更多信息,請查閱:
4=關於smali/baksmali的信息,請查閱:
5=關於ShakaApktool的信息,請查閱:
6=查看更多信息
7=查看版本信息
8=輸出apk路徑
9=保存框架文件到指定目錄<dir>
10=保存框架文件為指定名稱 <tag>
11=強制刪除目標文件夾
12=輸出文件夾名字
13=使用指定目錄下的框架文件
14=不反編譯資源
15=不反編譯源文件
16=使用指定名稱的框架文件 <tag>
17=跳過已編譯檢查,強制編譯所有文件
18=The numeric api-level of the file to generate, e.g. 14 for ICS
19=不輸出debug信息
20=反編譯調試模式. 查閱更多信息
21=反編譯調試模式下,給Smali添加行前綴
22=當出現錯誤或者一些resources被放棄時使用, 例如\n            "Invalid config flags detected. Dropping resources", 即使在\n            有錯誤的情況下，你還是想要強行反編譯. 你之後必須手動修復\n            相關錯誤才能進行編譯
23=保持盡可能的接近原始文件.防止重新生成
24=從指定路徑加載aapt
25=複製原始AndroidManifest.xml和META-INF文件.查閱更多信息
26=調試模式編譯. 獲取更多信息.
27=Apache License 2.0
28=開源所有框架
29=默認是
30=publicize-resources
31=正在從框架文件載入資源列表
32=正在編譯apk文件
33=拷貝原始文件
34=拷貝 AndroidManifest.xml
35=拷貝 META-INF
36=正在拷貝libs目錄
37=檢查是否有被修改的資源
38=正在編譯 AndroidManifest.xml
39=正在拷貝原始 AndroidManifest.xml
40=正在編譯資源
41=正在拷貝raw資源
42=正在編譯java源
43=複製未知文件/目錄
44=複製 raw manifest
45=複製 assets 和 libs
46=反編譯 Java 源
47=找不到資源文件
48=複製未知文件
49=複製原始文件
50=被用作 AAPT 位置
51=命令運行
52=常規資源列表
53=反編譯資源文件
54=反編譯 values​​ */* XMLs
55=反編譯AndroidManifest.xml 只有框架資源
56=反編譯 AndroidManifest.xml 與資源
57=框架安裝到
58=正在加載資源列表
59=反編譯共享庫
60=無法反編譯文件, 使用FALSE 值替換中
61=無法解碼ATTR值，使用未解碼的值
62=沒有找到 9patch​​格式檔
63=%s 中未定義的資源規範
64=多資源
65=多種 res 規格
66=配置標誌數量 > %d. 超出字節: 0x%X
67=使用 ShakaApktool
68=忽略重複的字段
69=發現重複的靜態字段或實例字段
70=需要重命名這些字段中的一部分, 包括所有引用
71=重複字段已忽略
72=簽名中同時存在靜態字段和實例字段
73=重複方法已忽略
74=# 實例方法
75=# 虛方法
76=# 實例字段
77=發現重複的實例方法或虛方法
78=AnalysisException:
79=Try start offset %d is past the end of the code block
80=Try end offset %d is past the end of the code block
81=無效的引用類型
82=無效引用
83=操作碼31t無效
84=無效載荷參考
85=禁用的 odex 操作碼
86=未知操作碼:
87=無法解析依賴值 %s
88=警告: 無法打開%s 為讀取. 只能繼續查看
89=讀取 boot class 路徑條目時報錯
90=無法找到 boot class 路徑文件
91=odex 版本 %d 目前還未支持
92=代碼地址:
93=Invalid register type %s for register v%d
94=v%d cannot be used as the first register in a wide registerpair because it is the last register.
95=%s 的錯誤字段類型 "%s"
96=Not an odexed field access opcode:
97=未知類型 %s
98=Switch instruction at address/index 0x%x/%d points to the end of the method
99=Switch instruction at address/index 0x%x/%d does not refer to a payload instruction
100=Switch instruction at address/index 0x%x/%d refers to the wrong type of payload instruction
101=Multiple switch instructions refer to the same payload
102=暫不支持
103=請提交一個bug
104=Didn't throw an exception for value
105=Threw an exception for value
106=無法識別項目類型
107=Param string "%s" contains invalid type prefix
108=Annotating outside the parent bounds
109=%s 在 %s 上的操作碼無效
110=無效寄存器
111=必須在 v0 到 v15(含) 之間.
112=必須在 v0 到 v255(含) 之間.
113=必須在 v0 到 v65535(含) 之間.
114=必須在 -8 到 7(含) 之間.
115=必須在 -128 到 127(含) 之間.
116=無效字面量
117=必須在 -32768 到 32767(含) 之間.
118=低16位字節會被清零
119=低48位字節會被清零
120=無效的代碼便宜
121=無效的寄存器數量
122=必須在 0 到 5(含) 之間.
123=必須在 0 到 255(含) 之間.
124=Invalid value_arg value %d for an encoded_value. Expecting 0
125=Invalid value_arg value %d for an encoded_value. Expecting 0..%d, inclusive
126=無效的字段偏移量
127=必須在 0x0000 到 0xFFFF(含) 之間
128=無效的虛函數表索引
129=必須在 0 到 65535 之間, inclusive
130=無效的直列指數
131=無效的驗證錯誤值
132=必須在 1 到 9(含) 之間
133=引用無效
134=預期參考類型
135=預期參考字段
136=預期參考方法
137=無效引用類型
138=位置%d 上,在"%s" 參數列表中'%c' 字符無效
139=未知引用類型
140=無法獲取BuilderDebugItem 地址,因為並未與方法關聯
141=無法獲取指令的位置,因為並未添加進方法
142=目標超出範圍
143=The referrer has not been set yet
144=Cannot get the location of a label that hasn't been placed yet
145=This iterator was invalidated by a change to this MutableMethodImplementation
146=Only StringReference instances returned by DexBuilder.internStringReference or DexBuilder.internNullableStringReference may be used
147=Only TypeReference instances returned by DexBuilder.internTypeReference or DexBuilder.internNullableTypeReference may be used
148=Must call setSuffix() first
149=無法刪除 %s ,可移到另一個目錄
150=無法創建目錄 %s
151=後綴僅能設置一次
152=後綴必須為 [0, 100000)
153=不支持的功能
154=功能名稱不能為空
155=重複前綴
156=命名空間不能為空
157=默認命名空間不能有前綴
158=不支持的屬性
159=setOutput() must called set before serialization can start
160=start tag can not be written in empty default namespace as default namespace is currently bound to
161=# 註解
162=# 接口
163=# 靜態字段
164=There is both a direct and virtual method with this signature
165=你必須重命名這些方法中的一個, 包括其所有引用
166=The value of this static final field might be set in the static constructor
167=為無效的驗證錯誤類型
168=Replaced unresolvable odex instruction with a throw
169=未知訪問類型
170=無效的調試類型
171=Invalid annotation visibility
172=無效的驗證錯誤:
173=Cannot call getDestinationRegister() for an instruction that doesn't store a value
174=無效的數組類型:
175=無法獲取 boot class 路徑文件 %s
176=Cannot construct ClassProto for non reference type
177=解析方法 %s 時找不到訪問類
178=解析字段 %s 時找不到訪問類
179=Cannot call getCommonSuperclass on PrimitiveProto
180=無效類型
181=此方法不適用小註冊類型: %s
182= %s 不支持的指令格式
183=無效的調試項目類型:
184=Encountered optional uint that is out of range at offset 0x%x
185=Encountered small uint that is out of range at offset 0x%x
186=Invalid size %d for sized int at offset 0x%x
187=Invalid size %d for sized long at offset 0x%x
188=Invalid size %d for sized uint at offset 0x%x
189=不支持大端格式的dex檔
190=預計:
191=顯示語言
192=檢查是否有被修改的代码
193=找不到資源文件
194=重命名為
195=無法反編譯 arsc 文件
196=無法反編譯 XML
197=無法判斷應用程序框架
198=未設置反編譯目錄
199=使用默认的框架资源档
200=不解析.9格式的资源
201=不能重命名临时文件
202=展示更多的可識別字符
203=檢閱到 HorizontalScrollView 異常 xml
204=檢閱到 dalvik-obfuscator 代碼區
205=忽略不能反編譯的資源文件
206=忽略反編譯資源的錯誤
207=反編譯遇到未知资源id繼續執行
208=更正反編譯類別
209=關於Apktool的信息,請查閱:
210=assembles a set of smali files into a dex file
211=prints the help message then exits. Specify twice for debug options
212=the bootclasspath jars to use, for analysis. Defaults to core.jar:ext.jar:framework.jar:android.policy.jar:services.jar. If the value begins with a :, it will be appended to the default bootclasspath instead of replacing it
213=If not specified
214=it defaults to
215=The number of threads to use. Defaults to the number of cores available, up to a maximum of 6
216=the name of the dex file that will be written. The default is out.dex
217=enable experimental opcodes to be assembled, even if they  aren't necessarily supported by the Android runtime yet
218=allow odex instructions to be compiled into the dex file. Only a few instructions are supported - the ones that can exist in a dead code path and not cause dalvik to reject the class
219=Debug Options
220=Print the name and text of each token
221=Generate verbose error messages
222=disassembles and/or dumps a dex file
223=the base folder to look for the bootclasspath files in. Defaults to the current directory
224=looks for dex file named DEX_FILE, defaults to classes.dex
225=add comments to the disassembly containing the code offset for each address
226=the resource ID files to use, for analysis. A colon-separated list of prefix=file pairs.  For example
227=When deodexing, use the package-private access check when calculating vtable indexes. It should only be needed for 4.2.0 odexes. The functionality was reverted for 4.2.1.
228=output the .locals directive with the number of non-parameter registers, rather than the .register directive with the total number of register
229=don't output helper comments for synthetic accessors
230=the directory where the disassembled files will be placed. The default is out
231=use the v<n> syntax instead of the p<n> syntax for registers mapped to method parameters
232=print the specificed type(s) of register information for each instruction. "ARGS,DEST" is the default if no types are specified.
233=Valid values are:
234=all pre- and post-instruction registers.
235=all pre-instruction registers
236=all post-instruction registers
237=any pre-instruction registers used as arguments to the instruction
238=the post-instruction destination register, if any
239=Any pre-instruction register has been merged from more than 1 different post-instruction register from its predecessors
240=For each register that would be printed by MERGE, also show the incoming register types that were merged
241=create label names using a sequential numbering scheme per label type, rather than using the bytecode address
242=Use implicit (type-less) method and field references
243=enable experimental opcodes to be disassembled, even if they aren't necessarily supported in the Android runtime yet
244=deodex the given odex file. This option is ignored if the input file is not an odex file
245=dumps the given dex file into a single annotated dump file named FILE (<dexfile>.dump by default), along with the normal disassembly
246=ignores any non-fatal errors that occur while disassembling/deodexing, ignoring the class if needed, and continuing with the next class. The default behavior is to stop disassembling and exit once an error is encountered
247=suppresses the output of the disassembly
248=specify a file containing a custom inline method table to use for deodexing
249=糾正XML屬性名. 可能有問題, 不推薦
250=你可以使用
251=重新反編譯資源文件

r0=拷貝文件 $1 ...
r1=編譯 $1 到 $2...
r2=反編譯 $1...
r3=使用 Apktool $1 反編譯 $2
r4=已發現重命名的manifest包! 正在用$2 替換$1
r5=Arsc 文件包含多個包.正在使用$1包作為默認
r6=使用 Apktool $1
r7=正在使用 $2 方法复制未知文件 $1
r8=複製原版 $1 文件...
r9=糾正XML屬性名: $1 轉 $2
r10=參數來糾正XML屬性名: $1 轉 $2
r11=重命名 ResResSpec $1 为 $2