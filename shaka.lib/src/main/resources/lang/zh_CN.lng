-1=简体中文汉化:越狱 <pwelyn@gmail.com> http://weibo.com/206021119
0=使用AspectJ织入修改Apktool项目
1=修改自
2=Android APK 反汇编工具
3=更多信息,请查看:
4=关于smali/baksmali的信息,请查看:
5=关于ShakaApktool的信息,请查看:
6=查看更多信息
7=查看版本信息
8=输出apk路径
9=保存框架文件到指定目录<dir>
10=保存框架文件为指定名称 <tag>
11=强制删除目标文件夹
12=输出文件夹名字
13=使用指定目录下的框架文件
14=不反编译resources.arsc
15=不反编译classes.dex
16=使用指定名称的框架文件 <tag>
17=跳过已编译检查,强制编译所有文件
18=将按照API级别生成文件信息, 例如.14是ICS
19=不输出debug信息
20=反编译调试模式. 查看更多信息
21=反编译调试模式下, 给Smali添加行前缀
22=当出现错误或者一些resources被放弃时使用，例如.\n            "Invalid config flags detected. Dropping resources", 即使在\n            有错误的情况下，你还是想要强行反编译. 你之后必须手动修复\n            相关错误才能进行编译
23=保持尽可能的接近原始文件.防止重新生成
24=从指定路径加载aapt
25=复制原始AndroidManifest.xml和META-INF文件.可以查看项目更多信息
26=调试模式编译. 检查项目的更多信息.
27=Apache License 2.0
28=开源所有框架
29=默认是
30=publicize-resources
31=正在从框架文件加载资源列表
32=正在编译apk文件
33=拷贝原始文件
34=拷贝 AndroidManifest.xml
35=拷贝 META-INF
36=正在拷贝libs目录
37=检查是否有被修改的资源
38=正在编译 AndroidManifest.xml
39=正在拷贝原始 AndroidManifest.xml
40=正在编译资源
41=正在拷贝raw资源
42=正在编译java源
43=复制未知文件/目录
44=复制 raw manifest
45=复制 assets 和 libs
46=反编译 Java 源
47=找不到资源文件
48=复制未知文件
49=复制原始文件
50=被用作 AAPT 位置
51=命令运行
52=常规资源列表
53=反编译资源文件
54=反编译 values */* XMLs
55=反编译 AndroidManifest.xml 只有框架资源
56=反编译 AndroidManifest.xml 与资源
57=框架安装到
58=正在加载资源列表
59=反编译共享库
60=无法反编译文件, 使用 FALSE 值替换中
61=无法解码ATTR值，使用未解码的值
62=没有找到 9patch 格式的文件
63=%s 中未定义的资源规范
64=多个资源
65=多种 res 规格
66=配置标志数量 > %d. 超出字节: 0x%X
67=使用 ShakaApktool
68=忽略重复的字段
69=发现重复的静态字段或实例字段
70=需要重命名这些字段中的一部分, 包括所有引用
71=重复字段已忽略
72=此签名已同时存在静态字段和实例字段
73=重复方法已忽略
74=# 实例方法
75=# 虚方法
76=# 实例字段
77=发现重复的实例方法或虚方法
78=AnalysisException:
79=Try start offset %d is past the end of the code block
80=Try end offset %d is past the end of the code block
81=无效的引用类型
82=无效引用
83=操作码31t无效
84=无效载荷参考
85=禁用的 odex 操作码
86=未知操作码:
87=无法解析依赖值 %s
88=警告: 无法打开 %s 为读取. 只能继续查看
89=读取 boot class 路径条目时报错
90=无法找到 boot class 路径文件
91=odex 版本 %d 目前还未支持
92=代码地址:
93=Invalid register type %s for register v%d
94=v%d cannot be used as the first register in a wide registerpair because it is the last register.
95=%s 的错误字段类型 "%s"
96=Not an odexed field access opcode:
97=未知类型 %s
98=Switch instruction at address/index 0x%x/%d points to the end of the method
99=Switch instruction at address/index 0x%x/%d does not refer to a payload instruction
100=Switch instruction at address/index 0x%x/%d refers to the wrong type of payload instruction
101=Multiple switch instructions refer to the same payload
102=目前不支持
103=请提交一个bug
104=Didn't throw an exception for value
105=Threw an exception for value
106=无法识别项目类型
107=Param string "%s" contains invalid type prefix
108=Annotating outside the parent bounds
109= %s 在 %s 上的操作码无效
110=无效寄存器
111=必须在 v0 到 v15(含) 之间.
112=必须在 v0 到 v255(含) 之间.
113=必须在 v0 到 v65535(含) 之间.
114=必须在 -8 到 7(含) 之间.
115=必须在 -128 到 127(含) 之间.
116=无效字面量
117=必须在 -32768 到 32767(含) 之间.
118=Low 16 字节会被清零
119=Low 48 字节会被清零
120=Invalid code offset
121=无效的注册计数
122=必须在 0 到 5(含) 之间.
123=必须在 0 到 255(含) 之间.
124=Invalid value_arg value %d for an encoded_value. Expecting 0
125=Invalid value_arg value %d for an encoded_value. Expecting 0..%d, inclusive
126=无效的字段偏移量
127=必须在 0x0000 到 0xFFFF 之间, inclusive
128=无效的虚函数表索引
129=必须在 0 到 65535 之间, inclusive
130=无效的直列指数
131=无效的验证错误值
132=必须在 1 到 9 之间, inclusive
133=引用无效
134=预期参考类型
135=预期参考字段
136=预期参考方法
137=无效引用类型
138=位置 %d 上,在 "%s" 参数列表中 '%c' 字符无效
139=未知引用类型
140=无法获取 BuilderDebugItem 地址,因为并未与方法关联
141=无法获取指令的位置,因为并未添加进方法
142=目标超出范围
143=The referrer has not been set yet
144=Cannot get the location of a label that hasn't been placed yet
145=This iterator was invalidated by a change to this MutableMethodImplementation
146=Only StringReference instances returned by DexBuilder.internStringReference or DexBuilder.internNullableStringReference may be used
147=Only TypeReference instances returned by DexBuilder.internTypeReference or DexBuilder.internNullableTypeReference may be used
148=Must call setSuffix() first
149=无法删除 %s ,可移到另一个目录
150=无法创建目录 %s
151=后缀仅能设置一次
152=后缀必须为 [0, 100000)
153=不支持的功能
154=功能名称不能为空
155=重复前缀
156=命名空间不能为空
157=默认命名空间不能有前缀
158=不支持的属性
159=setOutput() must called set before serialization can start
160=start tag can not be written in empty default namespace as default namespace is currently bound to
161=# 注解
162=# 接口
163=# 静态字段
164=There is both a direct and virtual method with this signature
165=必须重命名这些方法之一, 包括所有引用
166=The value of this static final field might be set in the static constructor
167=为无效的验证错误类型
168=Replaced unresolvable odex instruction with a throw
169=未知访问类型
170=无效的调试项目类型
171=Invalid annotation visibility
172=无效的验证错误:
173=Cannot call getDestinationRegister() for an instruction that doesn't store a value
174=无效的数组类型:
175=无法获取 boot class 路径文件 %s
176=Cannot construct ClassProto for non reference type
177=解析方法 %s 时找不到访问类
178=解析字段 %s 时找不到访问类
179=Cannot call getCommonSuperclass on PrimitiveProto
180=无效类型
181=此方法不适用小注册类型: %s
182= %s 不支持的指令格式
183=无效的调试项目类型:
184=Encountered optional uint that is out of range at offset 0x%x
185=Encountered small uint that is out of range at offset 0x%x
186=Invalid size %d for sized int at offset 0x%x
187=Invalid size %d for sized long at offset 0x%x
188=Invalid size %d for sized uint at offset 0x%x
189=当前不支持大端的dex文件
190=预计:
191=显示语言
192=检查是否有被修改的代码
193=找不到资源文件
194=重命名为
195=无法反编译 arsc 文件
196=无法反编译 XML
197=无法判断应用程序框架
198=未设置反编译目录
199=使用默然的框架资源文件
200=不解析.9格式的资源
201=不能重命名临时文件
202=显示更多的可识别字符
203=检测到 HorizontalScrollView 异常 xml
204=检测到 dalvik-obfuscator 代码块
205=忽略不能反编译的资源文件
206=忽略资源反编译的错误
207=反编译遇到未知资源id继续执行
208=纠正反编译类型
209=关于Apktool的信息,请查看:
210=编译一组 smali 文件到一个 dex 文件
211=显示帮助文本后退出.为调试选项指定的两倍
212=the bootclasspath jars to use, for analysis. Defaults to core.jar:ext.jar:framework.jar:android.policy.jar:services.jar. If the value begins with a :, it will be appended to the default bootclasspath instead of replacing it
213=如果不指定
214=默认为
215=可用线程数量.默认为内核允许的数量,最大可调至6
216=dex文件名将被记录,默认命名为 out.dex
217=启用实验操作码进行编译，即使还不一定被Android运行支持
218=允许 odex 指令编译进 dex 文件.仅支持少数命令 - 那些可以存放至固定代码路径并且不会导致 dalvik 拒绝的类
219=调试选项
220=显示每个完成的名字及文本
221=生成详细错误信息
222=反编译 并/或 转储 dex文件
223=目录文件夹搜索 bootclasspath 文件.默认至当面目录
224=搜索文件名为 DEX_FILE 的dex文件,默认至 classes.dex
225=反编译时添加注释包含代码的每个偏移
226=the resource ID files to use, for analysis. A colon-separated list of prefix=file pairs.  For example
227=When deodexing, use the package-private access check when calculating vtable indexes. It should only be needed for 4.2.0 odexes. The functionality was reverted for 4.2.1.
228=output the .locals directive with the number of non-parameter registers, rather than the .register directive with the total number of register
229=don't output helper comments for synthetic accessors
230=the directory where the disassembled files will be placed. The default is out
231=use the v<n> syntax instead of the p<n> syntax for registers mapped to method parameters
232=print the specificed type(s) of register information for each instruction. "ARGS,DEST" is the default if no types are specified.
233=Valid values are:
234=all pre- and post-instruction registers.
235=all pre-instruction registers
236=all post-instruction registers
237=any pre-instruction registers used as arguments to the instruction
238=the post-instruction destination register, if any
239=Any pre-instruction register has been merged from more than 1 different post-instruction register from its predecessors
240=For each register that would be printed by MERGE, also show the incoming register types that were merged
241=create label names using a sequential numbering scheme per label type, rather than using the bytecode address
242=Use implicit (type-less) method and field references
243=enable experimental opcodes to be disassembled, even if they aren't necessarily supported in the Android runtime yet
244=deodex the given odex file. This option is ignored if the input file is not an odex file
245=dumps the given dex file into a single annotated dump file named FILE (<dexfile>.dump by default), along with the normal disassembly
246=ignores any non-fatal errors that occur while disassembling/deodexing, ignoring the class if needed, and continuing with the next class. The default behavior is to stop disassembling and exit once an error is encountered
247=suppresses the output of the disassembly
248=specify a file containing a custom inline method table to use for deodexing

r0=拷贝文件 $1 ...
r1=编译 $1 到 $2...
r2=反编译 $1...
r3=使用 Apktool $1 反编译 $2
r4=已发现重命名的manifest包! 替换 $1 为 $2
r5=Arsc 文件包含多个包.正在使用 $1 包作为默认
r6=使用 Apktool $1
r7=正在使用 $2 方法复制未知文件 $1
r8=复制原版 $1 文件...
